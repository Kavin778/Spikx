// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  rooms     Room[]
  sessions  Sessions[]
}

model Room{
  id              String    @id @default(cuid())
  name            String  
  creatorId       String
  creator         User      @relation(fields:[creatorId],references:[id])
  currentMovieId  String
  currentMovie    Movies    @relation(fields:[currentMovieId],references:[id])
  isOnline        Boolean   @default(true)
  isPublic        Boolean   @default(false)
  password        String?
  description     String?   @db.VarChar(100)
  createdAt       DateTime  @default(now())
}

model Movies{
  id              String    @id @default(cuid())
  title           String
  type            String
  tmdbId          String    @unique
  poster          String[]
  backdrops       String[]
  logos           String[]
  jellyfinItemId  String    @unique
  createdAt       DateTime  @default(now())
  rooms           Room[]
}

model Sessions{
  id              String    @id @default(cuid())
  refreshToken    String    @unique
  expiresAt       DateTime
  userId          String 
  user            User      @relation(fields:[userId],references:[id],onDelete:Cascade)
  createdAt       DateTime  @default(now())
}

